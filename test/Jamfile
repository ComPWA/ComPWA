########### test apps #############
import os ;

local GENEVA = [ os.environ GENEVA ] ;
local ROOTSYS = [ os.environ ROOTSYS ] ;
local ROOTINC = [ os.environ ROOTINCLUDE ] ;
local BOOST_ROOT = [ os.environ BOOST_ROOT ] ;
local QFTINC = [ os.environ QFT_INCLUDE ] ;
local QFT = [ os.environ QFT ] ;
local MINUIT2 = [ os.environ MINUIT2 ] ;

BOOSTLIBS = -lboost_log_setup -lboost_log -lboost_date_time -lboost_filesystem -lboost_program_options -lboost_regex -lboost_serialization -lboost_system -lboost_thread -lboost_test_exec_monitor  ;

local rlibs = [ SHELL "$ROOTSYS/bin/root-config --libs" ] ;
ROOTLIBS = [ MATCH "(.*)[\n]" : $(rlibs) ] ;

project :
	requirements <include>./
	    <include>$(TOP)
		<include>$(ROOTSYS)/include
		<include>$(ROOTSYS)/include/root
		<include>$(BOOST_ROOT)/include
		<include>$(GENEVA)/include
        <include>$(QFT)/include
        <include>$(MINUIT2)/include
        <cxxflags>-pthread
	<linkflags>-L$(BOOST_ROOT)/lib
	<linkflags>$(BOOSTLIBS)
	<linkflags>$(ROOTLIBS)
	<linkflags>-lEG
	<linkflags>-lRooFit
	<linkflags>-lRooFitCore
	<linkflags>-L$(QFT)/lib
	<linkflags>-lqft++
	#<linkflags>-lgomp
	;

lib test : 
        [ glob *.cpp : *App.cpp ]
        $(TOP)/Optimizer//Optimizer 
        : : ;
        

#exe cx0testApp : 
#        CX0TestApp.cpp 
#        test
#        : ;
        
exe treetestApp : 
        TreeTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        : ;
        
exe dataiftestApp : 
        DataIFTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/DataReader/RootReader//RootReader  
        : ;

if $(GENEVA) { 
exe optimizertestApp : 
        OptimizerTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        $(TOP)/Optimizer/Geneva//GenevaIF  
        : ;
        
exe genevatestApp : 
        GenevaTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Optimizer/Geneva//GenevaIF 
        : ;
} else {
exe optimizertestApp : 
        MinuitTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        : ;
}

exe physicstestApp : 
        PhysicsTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/BreitWigner//BreitWigner  
        : ;
        
exe estimatortestApp : 
        EstimatorTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Estimator/MinLogLH//MinLogLH 
        $(TOP)/Estimator/ChiOneD//ChiOneD 
        $(TOP)/Physics/BreitWigner//BreitWigner  
        $(TOP)/DataReader/RootReader//RootReader
        : ;
        
exe integrationtestApp : 
        IntegrationTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Estimator/MinLogLH//MinLogLH 
        $(TOP)/Physics/BreitWigner//BreitWigner   
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        : ;
        
exe integrationtestbinnedApp : 
        IntegrationTestBinnedApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Estimator/ChiOneD//ChiOneD 
        $(TOP)/Physics/BreitWigner//BreitWigner   
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        : ;
        
#exe blackscholesApp : 
#        BlackScholesApp.cpp 
#        test
#        $(TOP)/Core//ComPWA
#        $(TOP)/Estimator/StockLeastSquares//StockLeastSquares 
#        $(TOP)/Physics/BlackScholes//BlackScholes   
#        $(TOP)/DataReader/StockReader//StockReader
#        $(TOP)/Optimizer/Minuit2//Minuit2IF
#        : ;
#        
#exe neuralnetworkApp : 
#        NeuralNetworkApp.cpp 
#        test
#        $(TOP)/Core//ComPWA
#        $(TOP)/Estimator/StockLeastSquares//StockLeastSquares 
#        $(TOP)/Physics/NeuralNetwork//NeuralNetwork   
#        $(TOP)/DataReader/StockReader//StockReader
#        $(TOP)/Optimizer/Geneva//GenevaIF
#        $(TOP)/Optimizer/Minuit2//Minuit2IF
#        : ;
        
exe runmanagertestApp : 
        RunManagerTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Estimator/MinLogLH//MinLogLH 
        $(TOP)/Physics/BreitWigner//BreitWigner   
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        : ;
        
exe gentwopartApp : 
        GenTwoPartApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/BreitWigner//BreitWigner  
        : ;
        
exe dpareaTestApp : 
        DPareaTestApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/DPKinematics//DPKinematics
        : ;

exe genRunManager : 
        GenRunManagerApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/AmplitudeSum//AmplitudeSum  
        $(TOP)/DataReader/RootReader//RootReader  
        $(TOP)/Physics/DPKinematics//DPKinematics  
        : ;

exe gendalitzApp : 
        GenDalitzApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/AmplitudeSum//AmplitudeSum  
        $(TOP)/Physics/DPKinematics//DPKinematics  
        : ;
        
exe dalitzplotApp : 
        DalitzDataPlotterApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/DataReader/RootReader//RootReader  
        $(TOP)/Physics/DPKinematics//DPKinematics  
        : ;
        
exe dalitzfitApp : 
        DalitzFitApp.cpp 
        test
        $(TOP)/Core//ComPWA
        $(TOP)/Physics/AmplitudeSum//AmplitudeSum  
        $(TOP)/DataReader/RootReader//RootReader
        $(TOP)/Estimator/MinLogLH//MinLogLH 
        $(TOP)/Optimizer/Minuit2//Minuit2IF
        $(TOP)/Physics/DPKinematics//DPKinematics  
        : ;

install dist : test : <location>$(TOP)/lib <threading>single ;
#install dist2 : dalitzfitApp treetestApp cx0testApp dataiftestApp optimizertestApp physicstestApp blackscholesApp neuralnetworkApp : <location>$(TOP)/bin <threading>single ;
install dist2 : dalitzfitApp treetestApp dataiftestApp optimizertestApp physicstestApp : <location>$(TOP)/bin <threading>single ;
install dist3 : estimatortestApp integrationtestApp integrationtestbinnedApp runmanagertestApp gentwopartApp gendalitzApp dalitzplotApp dpareaTestApp genRunManager : <location>$(TOP)/bin <threading>single ;

if $(GENEVA) { 
install dist7 : genevatestApp : <location>$(TOP)/bin ;
}

