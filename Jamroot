########### ComPWA Jamroot #############
import os ;
import path ;

path-constant TOP : . ;

path-constant ROOTSYS : [ os.environ ROOTSYS ] ;
local rootlibdir = [ SHELL "$(ROOTSYS)/bin/root-config --libdir" ] ;
local rootlibs = [ SHELL "$(ROOTSYS)/bin/root-config --libs" ] ;
local rootincdir = [ SHELL "$(ROOTSYS)/bin/root-config --incdir" ] ;
constant ROOT_INC_PATH : [ MATCH "(.*)[\n]" : $(rootincdir) ] ;
constant ROOT_LIB_PATH : [ MATCH "(.*)[\n]" : $(rootlibdir) ] ;
constant ROOTLIBS : [ MATCH "(.*)[\n]" : $(rootlibs) ] ;

path-constant BOOST_ROOT : [ os.environ BOOST_ROOT ] ;
path-constant QFT : [ os.environ QFT ] ;
path-constant GSL : [ os.environ GSL_ROOT ] ;

BOOSTLIBS = -lboost_log_setup -lboost_log -lboost_date_time -lboost_filesystem 
-lboost_program_options -lboost_regex -lboost_serialization -lboost_system 
-lboost_thread -lboost_test_exec_monitor 
-L$(BOOST_ROOT)/lib ;

project ComPWA : requirements 
	<include>.
	<define>BOOST_LOG_DYN_LINK
	<cxxflags>-ftemplate-depth-256
	<cxxflags>-std=c++0x
	<cxxflags>-DBOOST_SPIRIT_USE_PHOENIX_V3

	<include>$(BOOST_ROOT)/include
	<linkflags>$(BOOSTLIBS)
	<warnings>off
	;

# This is the layout of the complete project tree. The configure.py script will comment/uncomment the following constant definitions
# disabling/enabling the appropriate subprojects. Of course the appropriate if statements have to be inserted around build-project rules
# and library sources etc...

constant build_test : 1 ;

constant build_Physics : 1 ;
constant build_AmplitudeSum : 1 ;
constant build_DPKinematics : 1 ;
constant build_BreitWigner : 1 ;
constant build_HelicityAmplitude : 1 ;

constant build_DataReader : 1 ;
constant build_RootReader : 1 ;
constant build_AsciiReader : 1 ;

constant build_Estimator : 1 ;
constant build_ChiOneD : 1 ;
constant build_MinLogLH : 1 ;
constant build_SliceFit : 1 ;

constant build_Optimizer : 1 ;
constant build_Minuit2 : 1 ;
	path-constant MINUIT2 : [ os.environ MINUIT2 ] ;
if $(build_Minuit2) && $(build_Minuit2) != 0 {
	path-constant MINUIT2 : [ os.environ MINUIT2 ] ;
}
constant build_Geneva : 0 ;
if $(build_Geneva) && $(build_Geneva) != 0 {
	path-constant GENEVA : [ os.environ GENEVA ] ;
}

# core should always be built
build-project Core ;
if $(build_test) && $(build_test) != 0 {
  build-project test ;
}
if $(build_Physics) && $(build_Physics) != 0 {
  build-project Physics ;
}
if $(build_DataReader) && $(build_DataReader) != 0 {
  build-project DataReader ;
}
if $(build_Estimator) && $(build_Estimator) != 0 {
  build-project Estimator ;
}
if $(build_Optimizer) && $(build_Optimizer) != 0 {
  build-project Optimizer ;
}
